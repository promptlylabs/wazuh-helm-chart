cert-manager:
  enabled: false

nameOverride: null
fullnameOverride: null

imagePullSecrets: []

# Kibana for elasticsearch with Wazuh plugins pre-installed
dashboard:
  replicas: 2

  annotations: {}
  podAnnotations: {}

  images:
    repository: wazuh/wazuh-dashboard
    tag: "4.11.1"
    pullPolicy: IfNotPresent
  
  resources:
    limits:
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  
  pdb:
    enabled: false
    maxUnavailable: 1
  
  # Will be implemented on Wazuh v5.0.0
  # readinessProbe: {}

  securityContext: {}

  networkPolicy:
    enabled: true

  # with this you will be able to access kibana on http port instead of https
  # if you use Ambassador edgestack this is necessary becasue
  # with `true` route will close unexpectedly
  # when accessing via ambassador external url
  enable_ssl: false

  service:
    annotations: {}
    httpPort: 5601
    type: ClusterIP
  
  cred:
    existingSecret: ""
    username: "kibanaserver"
    password: "kibanaserver"
  
  config: |
    {{- include "wazuh.dashboard.config" . | indent 2 -}}
  wazuh_config: |
    {{- include "wazuh.dashboard.wazuh_config" . | indent 2 -}}
  
  ingress:
    enabled: false
    ingressClassName: ""
    annotations: {}
    labels: {}
    hosts:
      - host: wazuh.example.com
        paths:
          - path: /
          # pathType: Prefix
    tls: []
    # - secretName: wazuh-tls
    #   hosts:
    #     - wazuh.example.com


indexer:
  replicas: 3

  annotations: {}
  podAnnotations: {}

  service:
    annotations: {}
    httpPort: 9200
    nodes: 9300
    metrics: 9600

  updateStrategy: RollingUpdate
  
  images:
    repository: wazuh/wazuh-indexer
    tag: "4.11.1"
    pullPolicy: IfNotPresent

  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      memory: 2Gi
  
  pdb:
    enabled: false
    maxUnavailable: 1

  # Will be implemented on Wazuh v5.0.0
  # readinessProbe: {}

  securityContext: {}

  networkPolicy:
    enabled: true

  initContainers:
    volumeMountHack:
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 50m
          memory: 128Mi
      securityContext: {}
    increaseTheVmMaxMapCount:
      resources:
        limits:
          memory: 256Mi
        requests:
          cpu: 50m
          memory: 128Mi
      securityContext:
        privileged: true

  config:
    opensearch: |-
      {{- include "wazuh.indexer.opensearchConfig" . | indent 2 -}}
    internalUsers: |-
      {{- include "wazuh.indexer.internalUsers" . | indent 2 -}}

  env:
    OPENSEARCH_JAVA_OPTS: "-Xms1g -Xmx1g -Dlog4j2.formatMsgNoLookups=true"
    CLUSTER_NAME: "wazuh"
    NETWORK_HOST: "0.0.0.0"
    DISABLE_INSTALL_DEMO_CONFIG: "true"

  # If defined, storageClassName: <storageClass>
  # If set to "-", storageClassName: "", which disables dynamic provisioning
  # If undefined (the default) or set to null, no storageClassName spec is
  #   set, choosing the default provisioner.
  storageClass: null
  storageSize: 50Gi

  cred:
    existingSecret: ""
    username: "admin"
    password: "SecretPassword"    


wazuh:
  key: "c98b62a9b6169ac5f67dae55ae4a9088"
  images:
    repository: wazuh/wazuh-manager
    tag: "4.11.1"
    pullSecret: regcred

  # Will be implemented on Wazuh v5.0.0
  # readinessProbe: {}

  env:
    FILEBEAT_SSL_VERIFICATION_MODE: full

  service:
    annotations: {}
    port: 1516

  apiCred:
    # 3 Options:
    # 1. Set existing secret name
    # 2. Set username and password manually
    # 3. Let secret be generated automatically (all empty)
    existingSecret: ""
    username: "wazuh-wui"
    # The password must have a length between 8 and 64 characters and contain at least one upper and lower case letter, a number, and a symbol(.*+?-).
    password: "MyS3cr37P450r.*-"
  authd:
    existingSecret: ""
    pass: "password"
  
  initContainer:
    resources: 
      limits:
        memory: 32Mi
      requests:
        cpu: 5m
        memory: 16Mi

  master:
    annotations: {}
    podAnnotations: {}

    service:
      type: ClusterIP
      annotations: {}
      ports:
        registration: 1515
        api: 55000

    resources:
      limits:
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
    
    networkPolicy:
      enabled: true
    
    storageClass: null
    storageSize: 50Gi

    ingress:
      agentRegistration:
        enabled: false
        ingressClassName: ""
        annotations: {}
        labels: {}
        hosts:
          - host: wazuh-agent-register.example.com
            paths:
              - path: /
              # pathType: Prefix
        tls: []
        # - secretName: wazuh-tls
        #   hosts:
        #     - wazuh.example.com

    conf: |
      {{- include "wazuh.master.conf" . | indent 2 -}}
    # To be appended to the master.conf
    extraConf: ""
    localInternalOptions: |
      {{- include "wazuh.master.local_internal_options" . | indent 2 -}}

  worker:
    replicas: 2

    annotations: {}
    podAnnotations: {}

    service:
      type: ClusterIP
      annotations: {}
      ports:
        agentEvents: 1514

    resources:
      limits:
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
    
    pdb:
      enabled: false
      maxUnavailable: 1
    
    networkPolicy:
      enabled: true

    storageClass: null
    storageSize: 50Gi

    ingress:
      enabled: false
      ingressClassName: ""
      annotations: {}
      labels: {}
      hosts:
        - host: wazuh-agent-events.example.com
          paths:
            - path: /
            # pathType: Prefix
      tls: []
      # - secretName: wazuh-tls
      #   hosts:
      #     - wazuh.example.com
    
    conf: |
      {{- include "wazuh.worker.conf" . | indent 2 -}}
    # To be appended to the worker.conf
    extraConf: ""
    localInternalOptions: |
      {{- include "wazuh.worker.local_internal_options" . | indent 2 -}}
